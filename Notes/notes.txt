Active Job is a framework for declaring jobs and making them run on a variety of queueing backends.

******************************
Active Job is an interface to queueing backends such as sidekiq, delayed_job or resque.
 It's simply a way for you to write background jobs where you don't have to care about which of the queueing backends will be used.


******************************

rails g job first_job

GuestsCleanupJob.set(wait: 5.seconds).perform_later(2)

*****************************
Sidekiq is a Ruby Background Processor that manages its queue with a Redis service. Learn the basics of Sidekiq and integrating it with ActiveJob

1) gem 'sidekiq'

2)
config.active_job.queue_adapter = :sidekiq
config.active_job.queue_adapter =  Rails.env.production? ? :sidekiq : :async

3) create sidekiq.rb in config/initializers

4) rails g job generate_random_user

5) GenerateRandomUserJob.perform_later

6) in terminal run sidekiq sever:
    sidekiq

7) run rails server in production:
    rails s -e production

https://www.youtube.com/watch?v=CStZg8ql9Vs
https://www.digitalocean.com/community/questions/how-to-run-rails-server-in-production-mode

*********************

gem 'faker'

